/*    THIS EXAMPLE DEFINED THE TYPES OF CONSTRUCTORS IMPLICIT AND EXPLICIT WITH AN EXAMPLE ON SC_HAS_PROCESS   */

#include <systemc>
using namespace sc_core;
SC_MODULE(MODULE_A){
    SC_CTOR(MODULE_A){ //Constructor taking only module name(implicit constructor)
        SC_METHOD(func_a);//METHOD for constructor taking the name of the function to(simulation kernal) /// later explained
    }
    void func_a(){//method called with no input , no output
        std::cout <<name()<<std::endl;
    }
};

SC_MODULE(MODULE_B){
    SC_CTOR(MODULE_B){//
        SC_METHOD(func_b);
    }
    void func_b();///calling function
};

void MODULE_B:: func_b(){//function declared outside the constrcutor 
    std::cout <<this->name()<<std::endl;
}

SC_MODULE(MODULE_C){
    const int i;
    SC_CTOR(MODULE_C);//(SC_HAS_PROCESS) /// DECLAED IN THE NEXT EXAMPLE
    MODULE_C(sc_module_name name,int i): sc_module(name), i(i){//////explicit  Constructor
        SC_METHOD(func_c);
    }
    void func_c(){
        std::cout <<name()<<", i = "<<i<< std::endl;
    }
};

int sc_main(int , char *[]){
    MODULE_A module_a("module_a");
    MODULE_B module_b("module_b");
    MODULE_C module_c("module_c",1);
    sc_start();
    return 0;
}